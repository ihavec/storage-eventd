.TH STORAGE-EVENTD.CONF 5 "April 2016" "storage-eventd" "System Administration"
.SH NAME
storage-eventd.conf \- configuration file for storage-eventd
.SH SYNOPSIS
.B storage-eventd.conf
.SH DESCRIPTION
storage-eventd is a daemon that listens for and executes actions automatically
based on a set of filters.  This manual page documents the configuration file
that defines those filters, the actions, and how they operate.

Each uevent generated by the \fBblock\fR subsystem will be processed through
a series of filter-action pairs.   There may be zero or more filters and
at least one action for each event handler.

.SH FORMAT
The configuration file follows the \fBlibconfig\fR file format.

A named item is defined using a name followed by a colon.

.RS
\fBname\fR: <statement>
.RE

A statement is a value assigned to a name and terminated using a semicolon.  The value can be a string, a group, or a list.

.RS
\fBname\fR = \fB"\fRvalue\fB";\fR
.RE

A group is a series of statements bounded by curly brackets and terminated by a semicolon.  A list is a series of comma-separated statements bounded by parens and terminated by a semicolon.

.RS
\fBname: {\fR
.RS
.br
<statement>\fB;\fR
.br
<statement>\fB;\fR
.RE
\fB};\fR
.RE

A list is a series of comma-separated elements bounded by parens and terminated with a semicolon.

.RS
\fBvariable\fR = \fB(\fR elem1, elem2 \fB);\fR
.RE

.SH SECTIONS
The configuration file consists of three sections.  The \fBfilters\fR and
\fBactions\fR sections define named filters and actions, respectively. The
\fBevents\fR section defines the filter-action pairs.  Each section is
described by a top-level group with the reserved names described above.

.SH FILTERS
Each filter is described by a \fBgroup\fR of statements bounded by curly
brackets.  Every filter description has a \fBtype\fR associated with it.
Each \fBtype\fR has a number of required and/or optional attributes
associated with it.

.B Uevent properties
.RS
Each uevent has a number of properties associated with it.  Some, such as
the device path ${DEVPATH} and the sysfs path ${SYSPATH}, will be present in
every uevent.  Others will be available depending on the subsystem.  The
uevent filter returns a positive result when the value matches the regular
expression provided.

.br
\fBtype = "uevent";\fR
.br
\fBname\fR = <variable name>\fB;\fR
.br
\fBvalue\fR = <regular expression>\fB;\fR
.RE

.B Device nodes
.RS
Each uevent for the block subsystem provides the \fBdev_t\fR associated
with the block device the event is describing.  This filter accepts
a shell glob-style path specification.  It is expected that the path
specification describes block device nodes.  Each file matched by the path
specification will have its \fBdev_t\fR compared against the the uevent and
will return a positive result when the comparison succeeds.

.br
\fBtype = "device"\;\fR
.br
\fBpattern\fR = <glob pathspec>\fB;\fR
.RE

.B UUID
.RS
Some devices and file systems can be described using a UUID.  This filter uses
\fBblkid\fR to match a UUID with a device. The format of the UUID is the typical
8-4-4-4-12 format.

.br
\fBtype = "uuid";\fR
.br
\fBvalue\fR = <01234567-89ab-cdef-0123-456789abcdef>\fB;\fR

.SH ACTIONS
.B Email
.RS
A typical response to a uevent is to send an email with the notification.  The
\fBemail\fR action requires the \fBrecipients\fR value as a string or list.

Optional values:
.br
\fBsender\fR = \fB"\fRUser Name <user@name.domain>\fB";\fR
.br
\fBsubject\fR = \fB"\fR<variable-substituted string>\fB";\fR
.br
\fBtemplate\fR = \fB"\fR<path to variable-substituted template file>\fB";\fR
.br
\fBsendmail\fR = \fB"\fR<path to executable that behaves like sendmail>\fB";\fR
.RE

.B Exec
.RS
Another typical action is to execute a command in response to a uevent.  The
\fBexec\fR action requires the \fBcommand\fR value as a variable-substituted
string.

Optional values:
.br
\fBuser\fR = \fB"\fRusername\fB";\fR or <uid>
.RS
Executes the action as the specified user.
.RE
.br
\fBgroup\fR = \fB"\fRgroupname\fB";\fR or <gid>
.RS
Executes the action as the specified group (defaults to the primary group of the user).
.RE

.RE

.B Ignore
.RS
The \fBignore\fR chain stops the event handling chain at that point in the
reaction chain.  No further event reactions are evaluated after the ignore
rule is encountered.

.SH EVENTS
The \fBevents\fR section is the only mandatory section.  It consists of
named event descriptions that are filter-action pairs that are evaluated
in the order they are defined.

Each event description contains a name and a group containing an optional
\fBfilter\fR and a mandatory \fBaction\fR.  Both can be specified by
a string referring to a pre-defined \fBfilter\fR or \fBaction\fR, a group
defining a new one in-inline, or a list of a combination of both.

.SH VARIABLE SUBSTITUTION
Actions that have optional arguments support variable substitution.  Variable
syntax is checked when the configuration file is loaded and evaluated when
the action is executed.  Consequently, the value of the variables may
change between events associated with the same device.  The syntax is
similar to shell-style verbose syntax where the variable name is surrounded
by curly braces and prefixed with a dollar-sign (e.g. \fB${VARIABLE}\fR).
Spaces within the name are not allowed.  Nesting variables is not supported.

The \fB${MOUNTPOINT}\fR variable will substitute the last mount point in
the system mount table matching the device or UUID in the case of file
systems that use anonymous devices, like btrfs.

.SH EXAMPLES
actions: {
.br
	out_of_space_email: {
.br
		type = "email";
.br
		recipients = "root";
.br
		subject = "Soft threshold reached on ${DEVNAME}";
.RE
	};
.RE

	run_fstrim: {
.RS
		type = "exec";
.br
		uid = "root";
.br
		command = "fstrim ${MOUNTPOINT}";
.RE
	};
.RE
};
.RE

filters: {
.RS
	soft_threshold_reached: {
.RS
		type = "uevent";
.br
		name = "SDEV_UA";
.br
		value = "THIN_PROVISIONING_SOFT_THRESHOLD_REACHED";
.RE
	};
.RE
};

.br
events: {
.br
	soft_threshold: {
.br
		filter = "soft_threshold_reached";
.br
		action = ("out_of_space_email", "run_fstrim");
.br
	};
.br

.br
	ignore_mdraid: {
.br
		filter = {
.br
			type = "device";
.br
			glob = "/dev/md*";
.br
		};
.br
		action = "ignore";
.br
	};
.br
};
.br
.RE
.SH "SEE ALSO"
.BR storage-eventd (8)
.BR regex (7)
.BR glob (7)
.BR libblkid (3)
