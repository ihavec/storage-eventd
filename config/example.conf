
version = "1.0";

actions:
{
	space_email:
	{
		type = "email";
		recipients = "root";
		subject = "Soft threshold reached on ${DEVNAME}"
	};

	custom_email:
	{
		type = "email";
		recipients = "root"
	};

	run_discard:
	{
		uid = "root";
		type = "exec";
		command = "fstrim ${MOUNTPOINT}";
	};
};

filters:
{
	sata_disks:
	{
		type = "device";
		glob = "/dev/disk/by-id/scsi-SATA*"
	};

	root_fs:
	{
		type = "uuid";
		value = "01234567-0123-0123-0123-0123456789ab";
	};

	soft_threshold_reached:
	{
		type = "uevent";
		name = "SDEV_UA";
		value = "THIN_PROVISIONING_SOFT_THRESHOLD_REACHED";
	};
};


#
# Events will be evaluated in the order defined below.
# An event with an action of "ignore" will stop the event chain from
# being evaluated at that point.
#
events:
{
	soft_threshold:
	{
		filter = "soft_threshold_reached";
		action = ("space_email", "run_discard");
	};

	blacklist_devices_by_path:
	{
		filter = {
			type = "device";
			glob = "/dev/disk/by-path/pci1*";
		}
		action = "ignore";
	};

	blacklist_devices_by_var:
	{
		filter = {
			type = "uevent";
			name = "MAJOR";
			value = "8";
		};
		action = "ignore";
	};

	root_filesystem:
	{
		filter = "root_fs";
		action = "run_discard";
	};

	boot_fs:
	{
		filter = {
			type = "uuid";
			value = "711f7dda-ac71-4771-ab90-d2a454843a8f";
		};
		action = {
			type = "email";
			recipients = "root";
		};
	};

	test_list_of_inline_actions_and_filters:
	{
		filter = ({ type = "uevent"; name = "MAJOR"; value = "254"; },
			  { type = "uevent"; name = "MINOR"; value = "0"; });

		action = ({ type = "email"; recipients = "root"; },
			  "custom_email", { type = "ignore"; });
	};

	default:
	{
		action = "custom_email";
	};
};
